[{"F:\\newGOX\\my-app\\src\\index.js":"1","F:\\newGOX\\my-app\\src\\App.js":"2","F:\\newGOX\\my-app\\src\\reportWebVitals.js":"3","F:\\newGOX\\my-app\\src\\components\\Home.js":"4","F:\\newGOX\\my-app\\src\\components\\Category.js":"5","F:\\newGOX\\my-app\\src\\components\\Bottombar.js":"6","F:\\newGOX\\my-app\\src\\components\\AddProduct.jsx":"7","F:\\newGOX\\my-app\\src\\components\\Search.js":"8","F:\\newGOX\\my-app\\src\\components\\Recommended.js":"9","F:\\newGOX\\my-app\\src\\components\\Cart.js":"10","F:\\newGOX\\my-app\\src\\components\\Profile.js":"11","F:\\newGOX\\my-app\\src\\components\\Product.js":"12","F:\\newGOX\\my-app\\src\\components\\Items.js":"13","F:\\newGOX\\my-app\\src\\context\\CartContext.js":"14"},{"size":590,"mtime":1609834696368,"results":"15","hashOfConfig":"16"},{"size":952,"mtime":1609834667597,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":1973,"mtime":1609837432490,"results":"19","hashOfConfig":"16"},{"size":1102,"mtime":1609858380673,"results":"20","hashOfConfig":"16"},{"size":1875,"mtime":1609842317073,"results":"21","hashOfConfig":"16"},{"size":4813,"mtime":1608827985805,"results":"22","hashOfConfig":"16"},{"size":2707,"mtime":1609858398299,"results":"23","hashOfConfig":"16"},{"size":1399,"mtime":1608895286441,"results":"24","hashOfConfig":"16"},{"size":4532,"mtime":1609843500769,"results":"25","hashOfConfig":"16"},{"size":3149,"mtime":1609855673139,"results":"26","hashOfConfig":"16"},{"size":5474,"mtime":1609843453515,"results":"27","hashOfConfig":"16"},{"size":2717,"mtime":1609842681213,"results":"28","hashOfConfig":"16"},{"size":320,"mtime":1609838049427,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1wvp6rt",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"F:\\newGOX\\my-app\\src\\index.js",[],["65","66"],"F:\\newGOX\\my-app\\src\\App.js",["67"],"import React from 'react';\nimport './App.css';\nimport Home from './components/Home';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport AddProduct from './components/AddProduct';\nimport Search from './components/Search';\nimport Cart from './components/Cart';\nimport Profile from './components/Profile';\nimport Product from './components/Product';\nimport Items from './components/Items';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/items\" component={Items} />\n          <Route path=\"/product\" component={Product} />\n          <Route path=\"/profile\" component={Profile} />\n          <Route path=\"/cart\" component={Cart} />\n          <Route path=\"/add\" component={AddProduct} />\n          <Route path=\"/search\" component={Search} />\n          <Route path=\"/\" component={Home} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","F:\\newGOX\\my-app\\src\\reportWebVitals.js",[],"F:\\newGOX\\my-app\\src\\components\\Home.js",[],"F:\\newGOX\\my-app\\src\\components\\Category.js",[],"F:\\newGOX\\my-app\\src\\components\\Bottombar.js",["68"],"import React ,{useContext}from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport './main.css';\r\nimport {CartContext} from '../context/CartContext';\r\n\r\nconst Bottombar = () => {\r\n\r\n    const[Item,setItem]=useContext(CartContext);\r\n\r\n    return (\r\n        <div className=\"mycontainer\">\r\n            <div className=\"container\">\r\n                <div className=\"row \">\r\n                   <nav className=\"tab-content navbar\">\r\n        \r\n                        <div className=\"tab\">\r\n                            <Link to='/' style={{ \"textDecoration\": 'none'}}>\r\n                               <i className=\"fas fa-home\" ></i>\r\n                               <p>Home</p>\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"tab\">\r\n                            <Link to='/search' style={{ \"textDecoration\": 'none'}}>\r\n                               <i className=\"fas fa-search\" ></i>\r\n                               <p>Search</p>\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"tab\">\r\n                            <Link to='/cart' style={{ \"textDecoration\": 'none'}} >\r\n                            <i className=\"fas fa-shopping-bag \"></i>\r\n                            <p>Cart <span className=\"CartIconRound\" >{Item}</span></p>\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"tab\">\r\n                            <Link to='/profile' style={{ \"textDecoration\": 'none'}}>\r\n                            <i className=\"fas fa-user\" ></i>\r\n                            <p>Profile</p>\r\n                            </Link>\r\n                        </div>\r\n                      \r\n                    </nav>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Bottombar\r\n","F:\\newGOX\\my-app\\src\\components\\AddProduct.jsx",[],"F:\\newGOX\\my-app\\src\\components\\Search.js",["69"],"import React, { useState, useEffect } from 'react';\r\nimport Axois from 'axios';\r\nimport SearchBar from \"material-ui-search-bar\";\r\nimport Bottombar from './Bottombar';\r\nimport './main.css';\r\n\r\n\r\n\r\nconst Search = () => {\r\n    const [searchValue, SetsearchValue] = useState('');\r\n    const [searchResult, SetsearchResult] = useState([]);\r\n    const [found, Setfound] = useState(false);\r\n\r\n\r\n    const fetchSearchResult = (e) => {\r\n        getSearchResult();\r\n    }\r\n    \r\n    useEffect(() => {\r\n        getSearchResult();\r\n    }, [searchValue]);\r\n\r\n    const getSearchResult = async () => {\r\n        Axois.get(`http://localhost:8000/search/${searchValue.val}`).then(res => {\r\n            console.log(res.data.data);\r\n            SetsearchResult(res.data.data);\r\n            Setfound(true);\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"container p-4\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <SearchBar\r\n                            value={searchValue.val}\r\n                            placeholder=\"Search Products ...\"\r\n                            onChange={(newValue) => SetsearchValue({ val: newValue })}\r\n                            onRequestSearch={(newValue) => fetchSearchResult({ val: newValue })}\r\n                            style={{ borderRadius: \"20px\" }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row p-4\">\r\n                    <div className=\"col\">\r\n                        <div className=\"SearchResultNumber\">\r\n                            {found && <h5 className=\"text-muted float-left\">FOUND {searchResult.length} RESULTS</h5>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row p-2\">\r\n                    {searchResult.map(item => (\r\n                        <div key={item.imageId} >\r\n                            <div className=\"col sm-6 p-2\">\r\n                                <div className=\"card cardItem cardSpace\" style={{ width: \"18rem\" }}>\r\n                                    <img className=\"card-img-top img-fluid rounded carddecks\" src={item.productImagePath} alt={item.categoryName} />\r\n                                    <div className=\"card-body\">\r\n                                        <p className=\"card-text\">{item.categoryName}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <Bottombar/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search\r\n","F:\\newGOX\\my-app\\src\\components\\Recommended.js",[],"F:\\newGOX\\my-app\\src\\components\\Cart.js",["70","71"],"import React, { useState, useEffect ,useContext} from 'react'\r\nimport Bottombar from './Bottombar';\r\nimport Axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CartContext } from '../context/CartContext';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 300,\r\n    },\r\n});\r\n\r\nconst Cart = () => {\r\n    const classes = useStyles();\r\n    const [orderedProducts, SetorderedProducts] = useState([]);\r\n    const [refreshCart,SetrefreshCart]=useState(\"change\");\r\n    \r\n      const[Item,setItem] = useContext(CartContext);\r\n\r\n\r\n    const Prices=orderedProducts.map(o=>{\r\n        return parseInt(o.price);\r\n    }).reduce(function(total, amount){\r\n        return total + amount;\r\n      },0);\r\n\r\n     \r\n\r\n    useEffect(() => {\r\n        getOrderProducts();\r\n        \r\n    }, [refreshCart]);\r\n\r\n    const getOrderProducts = async () => {\r\n        await Axios.get(\"http://localhost:8000/orders\").then(res => {\r\n            console.log(res.data.data);\r\n            SetorderedProducts(res.data.data);\r\n            setItem(res.data.data.length);\r\n        })\r\n        \r\n    }\r\n \r\n    const handleDeleteCart=async (deleteImageId)=>{\r\n          await Axios.delete(`http://localhost:8000/orders/deleteItems/${deleteImageId}`).then(res=>{\r\n               console.log(res.data);\r\n               SetrefreshCart(\"refreshthecart\");\r\n               setItem(orderedProducts.length);\r\n           })        \r\n    }\r\n   \r\n    return (\r\n        <div>\r\n            <h1>Cart Page</h1>\r\n            <h4>Items in Cart</h4>\r\n            <div className=\"container p-2\">\r\n                <div className=\"row \">\r\n                    <div className=\"col text-center\">\r\n                        {\r\n                          refreshCart&& orderedProducts.map((order,index) => (\r\n                                <div key={index} className=\"cartComponent\">\r\n                                    <Card className={classes.root}>\r\n                                        <CardActionArea>\r\n                                            <CardMedia\r\n                                                component=\"img\"\r\n                                                alt={order.productName}\r\n                                                height=\"100%\"\r\n                                                image={order.productImagePath}\r\n                                                title=\"Contemplative Reptile\"\r\n                                            />\r\n                                            <CardContent>\r\n                                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                                    {order.productName}\r\n                                                </Typography>\r\n                                                {/* <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                                 \r\n                                                </Typography> */}\r\n                                            </CardContent>\r\n                                        </CardActionArea>\r\n                                        <CardActions>\r\n                                            <Button size=\"small\" color=\"primary\">\r\n                                                Price: ${order.price}\r\n                                            </Button>\r\n                                            <Button size=\"small\"   style={{color:\"red\"}} onClick={()=>handleDeleteCart(order.imageId)}>\r\n                                                  Remove\r\n                                            </Button>\r\n                                        </CardActions>\r\n                                    </Card>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <h1 className=\"btn btn-success rounded-pill p-2 mt-5\">TotalPrice : ${Prices}</h1>\r\n                <div className=\"cartTotal\" >\r\n                </div>\r\n            </div>\r\n            <Bottombar />\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Cart;\r\n","F:\\newGOX\\my-app\\src\\components\\Profile.js",[],"F:\\newGOX\\my-app\\src\\components\\Product.js",["72","73","74"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport Axios from 'axios';\r\nimport Bottombar from './Bottombar';\r\nimport './main.css';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ReactJsAlert from \"reactjs-alert\";\r\nimport { CartContext } from '../context/CartContext';\r\n\r\nconst Product = (props) => {\r\n    const [productData, SetproductData] = useState([]);\r\n    const [imageData, SetimageData] = useState(0);\r\n    const history = useHistory();\r\n    const [whenAdded, SetwhenAdded] = useState(false);\r\n    const [Item, setItem] = useContext(CartContext);\r\n\r\n\r\n    useEffect(() => {\r\n        getProducts();\r\n    }, [])\r\n\r\n\r\n\r\n    const getProducts = async () => {\r\n        Axios.get(`http://localhost:8000/product/${props.location.productData}`).then(res => {\r\n            console.log(res.data.data);\r\n            SetproductData(res.data.data);\r\n        })\r\n    }\r\n\r\n    const handleImageChange = (image) => {\r\n        SetimageData(image);\r\n    }\r\n\r\n    const handleBack = () => {\r\n        history.push({\r\n            pathname: '/',\r\n        });\r\n    }\r\n\r\n    const handleCartEvent = async (CartData) => {\r\n        const orderData = {\r\n            orderImageId: CartData\r\n        }\r\n        await Axios.post(\"http://localhost:8000/orders/addToCart\", { orderData }).then(res => {\r\n            console.log(res.data);\r\n            SetwhenAdded(true);\r\n        })\r\n        setItem(Item + 1);\r\n    }\r\n\r\n    const handleCart = () => {\r\n        history.push('/cart');\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"container p-2\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"navitem\">\r\n                            <p onClick={handleBack}><i className=\"fas fa-arrow-left fa-lg\" ></i></p>\r\n                            <p onClick={handleCart}><i className=\"fas fa-shopping-bag fa-lg\"></i>{Item}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"carddecks \">\r\n                {productData.map((item, index) => {\r\n                    if (index === imageData) {\r\n                        return (\r\n                            <div className=\"container\" key={item.imageId}>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        <div className=\"productcard\">\r\n                                            <div className=\"mycolum\">\r\n                                                <div className=\"rowcol\">\r\n                                                    <p>{item.categoryName}</p>\r\n                                                    <h4><b>{item.productName}</b></h4>\r\n                                                    <p>FROM</p>\r\n                                                    <p>{item.price}</p>\r\n                                                    <p>Available colors</p>\r\n                                                    <div className=\"colorMap\">\r\n                                                        {productData.map((i, index) => (\r\n                                                            <div key={index} className=\"maindot\" onClick={() => handleImageChange(index)}>\r\n\r\n                                                                <span className=\"dot\" style={{ backgroundColor: i.imageColor }}></span>\r\n                                                            </div>\r\n                                                        ))}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <img src={item.productImagePath} className=\"img-fluid myimage\" alt=\"Responsive image\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"card-body\">\r\n                                        <h4 className=\"card-text p-3\">Description</h4>\r\n                                        <p>{item.productDescription}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-5 text-center\">\r\n                                            <button className=\"form-control rounded-pill text-center text-white\" style={{ backgroundColor: \"#8A2BE2\", height: \"50px\" }} onClick={() => handleCartEvent(item.imageId)} ><b>ADD TO CART</b></button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        )\r\n                    }\r\n                })}\r\n            </div>\r\n            {\r\n                whenAdded && <ReactJsAlert\r\n                    type=\"success\"\r\n                    title=\"Hey! Your Product is Added to Cart\"\r\n                    status={true}\r\n                    button=\"Okay\"\r\n                    color=\"#1d36ad\"\r\n                    quote=\"Do Check Your Item in Cart\"\r\n                    Close={() => SetwhenAdded(false)}\r\n                />\r\n            }\r\n\r\n            <Bottombar />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Product;\r\n","F:\\newGOX\\my-app\\src\\components\\Items.js",["75","76"],"import React, { useState, useEffect,useContext } from 'react';\r\nimport Axios from 'axios';\r\nimport BottomBar from './Bottombar';\r\nimport { useHistory } from 'react-router-dom';\r\nimport \"./style.css\"\r\nimport { CartContext } from '../context/CartContext';\r\n\r\nconst Items = (props) => {\r\n    const [productData, SetproductData] = useState([]);\r\n    const history = useHistory();\r\n\r\n    const [Item, setItem] = useContext(CartContext);\r\n    useEffect(() => {\r\n        getProducts();\r\n    }, [])\r\n\r\n\r\n\r\n    const getProducts = async () => {\r\n        Axios.get(`http://localhost:8000/category/get/${props.location.productData}`).then(res => {\r\n            console.log(res.data.data);\r\n            SetproductData(res.data.data);\r\n        })\r\n    }\r\n\r\n    const getSpecificProduct = (product) => {\r\n        history.push({\r\n            pathname: '/product',\r\n            productData: product,\r\n        });\r\n    }\r\n\r\n    const handleBack = () => {\r\n        history.push({\r\n            pathname: '/',\r\n        });\r\n    }\r\n\r\n    const handleCart = () => {\r\n        history.push('/cart');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <div className=\"container p-2\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"navitem\">\r\n                            <p onClick={handleBack}><i className=\"fas fa-arrow-left fa-lg\" ></i></p>\r\n                            <h4> Listing {props.location.productData} Products...</h4>\r\n                            <p onClick={handleCart}><i className=\"fas fa-shopping-bag fa-lg\"></i>{Item}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"container p-1\">\r\n                <div className=\"row p-2 \">\r\n                    {productData.map(item => (\r\n                        <div key={item.imageId} onClick={() => getSpecificProduct(item.groupId)}>\r\n                            <div className=\"col-sm-12 mycardAlignment\">\r\n                                <div className=\"card rounded \" style={{ \"width\": \"15rem\" }}>\r\n                                    <img className=\"card-img-top img-fluid text-center\" src={item.productImagePath} alt={item.categoryName} />\r\n                                    <div className=\"card-body text-center\">\r\n                                        <p className=\"card-text\">{item.productName}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <BottomBar />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Items;\r\n","F:\\newGOX\\my-app\\src\\context\\CartContext.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":11,"column":9,"nodeType":"83","messageId":"84","endLine":11,"endColumn":22},{"ruleId":"81","severity":1,"message":"85","line":8,"column":16,"nodeType":"83","messageId":"84","endLine":8,"endColumn":23},{"ruleId":"86","severity":1,"message":"87","line":21,"column":8,"nodeType":"88","endLine":21,"endColumn":21,"suggestions":"89"},{"ruleId":"81","severity":1,"message":"90","line":25,"column":13,"nodeType":"83","messageId":"84","endLine":25,"endColumn":17},{"ruleId":"86","severity":1,"message":"91","line":39,"column":8,"nodeType":"88","endLine":39,"endColumn":21,"suggestions":"92"},{"ruleId":"86","severity":1,"message":"93","line":19,"column":8,"nodeType":"88","endLine":19,"endColumn":10,"suggestions":"94"},{"ruleId":"95","severity":1,"message":"96","line":68,"column":48,"nodeType":"97","messageId":"98","endLine":68,"endColumn":50},{"ruleId":"99","severity":1,"message":"100","line":91,"column":49,"nodeType":"101","endLine":91,"endColumn":137},{"ruleId":"81","severity":1,"message":"85","line":12,"column":18,"nodeType":"83","messageId":"84","endLine":12,"endColumn":25},{"ruleId":"86","severity":1,"message":"93","line":15,"column":8,"nodeType":"88","endLine":15,"endColumn":10,"suggestions":"102"},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'CartProvideer' is defined but never used.","Identifier","unusedVar","'setItem' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getSearchResult'. Either include it or remove the dependency array.","ArrayExpression",["105"],"'Item' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getOrderProducts'. Either include it or remove the dependency array.",["106"],"React Hook useEffect has a missing dependency: 'getProducts'. Either include it or remove the dependency array.",["107"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["108"],"no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},{"desc":"113","fix":"115"},"Update the dependencies array to be: [getSearchResult, searchValue]",{"range":"116","text":"117"},"Update the dependencies array to be: [getOrderProducts, refreshCart]",{"range":"118","text":"119"},"Update the dependencies array to be: [getProducts]",{"range":"120","text":"121"},{"range":"122","text":"121"},[527,540],"[getSearchResult, searchValue]",[1196,1209],"[getOrderProducts, refreshCart]",[643,645],"[getProducts]",[487,489]]